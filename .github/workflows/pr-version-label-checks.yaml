name: "Check version labels on PR"
on:
  workflow_call:

permissions:
  pull-requests: write
  contents: read

jobs:
  labels:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure labels exist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! gh label list | grep -q 'major'; then
            gh label create major --color ff0000 --description "Major version bump"
          fi
          if ! gh label list | grep -q 'minor'; then
            gh label create minor --color 00ff00 --description "Minor version bump"
          fi
          if ! gh label list | grep -q 'patch'; then
            gh label create patch --color 0000ff --description "Patch version bump"
          fi
          if ! gh label list | grep -q 'major-bump'; then
            gh label create major-bump --color ff0000 --description "Major version bump in progress"
          fi
          if ! gh label list | grep -q 'minor-bump'; then
            gh label create minor-bump --color 00ff00 --description "Minor version bump in progress"
          fi
          if ! gh label list | grep -q 'patch-bump'; then
            gh label create patch-bump --color 0000ff --description "Patch version bump in progress"
          fi

      - name: Add labels to PR
        if: github.event_name == 'pull_request' && github.event.action == 'opened' || github.event.action == 'reopened'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! gh pr view ${{ github.event.pull_request.number }} --json labels | jq -r '.labels[].name' | grep -Eq 'major|minor|patch'; then
            TYPE=$(gh pr view ${{ github.event.pull_request.number }} --json title | jq -r '.title' | awk -F: '{print $1}' | grep -o '^[a-zA-Z]*')
          
            if echo "${TYPE}" | grep -Eiq '^feat$'; then
              gh pr edit ${{ github.event.pull_request.number }} --add-label 'minor'
            else
              gh pr edit ${{ github.event.pull_request.number }} --add-label 'patch'
            fi
          
            sleep 2 # Wait for the label to be added
          fi

      - name: Check labels
        id: check-labels
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          MAJOR=0
          MINOR=0
          PATCH=0
          BUMP_TYPE=""
          
          for LABEL in $(gh pr view ${{ github.event.pull_request.number }} --json labels | jq -r '.labels[].name'); do
            if [ "$LABEL" = "major" ]; then
              MAJOR=1
            elif [ "$LABEL" = "minor" ]; then
              MINOR=1
            elif [ "$LABEL" = "patch" ]; then
              PATCH=1
            fi
          done
          
          if [ $MAJOR -eq 1 ]; then
            BUMP_TYPE='major'
          elif [ $MINOR -eq 1 ]; then
            BUMP_TYPE='minor'
          elif [ $PATCH -eq 1 ]; then
            BUMP_TYPE='patch'
          else
            echo "error=error" >> $GITHUB_OUTPUT
            exit 1
          fi
          
          gh pr edit ${{ github.event.pull_request.number }} --add-label "${BUMP_TYPE}-bump"
          
          # Now we know the bump type, we need to check that the PR doesn't have a conflicting label
          for CONFLICTING_LABEL in $(gh pr view ${{ github.event.pull_request.number }} --json labels | jq -r '.labels[].name' | grep '[-]bump' | grep -v "${BUMP_TYPE}-bump"); do
            gh pr edit ${{ github.event.pull_request.number }} --remove-label "$CONFLICTING_LABEL"
            # If we can see the non-bump label, we need to remove it
          done
          
          for REDUNDANT_LABEL in $(gh pr view ${{ github.event.pull_request.number }} --json labels | jq -r '.labels[].name' | grep -E '^major$|^minor$|^patch$' | grep -v "${BUMP_TYPE}"); do
            gh pr edit ${{ github.event.pull_request.number }} --remove-label "$REDUNDANT_LABEL"
          done
          

      - uses: marocchino/sticky-pull-request-comment@773744901bac0e8cbb5a0dc842800d45e9b2b405  # v2.9.4
        if: always() && (steps.check-labels.outputs.error != null)
        with:
          header: pr-labels-error
          message: |
            The PR must have one of the following labels: `major`, `minor`, or `patch`.
            Please add one of these labels to the PR.

      # Delete a previous comment when the issue has been resolved
      - if: ${{ steps.check-labels.outputs.error == null }}
        uses: marocchino/sticky-pull-request-comment@773744901bac0e8cbb5a0dc842800d45e9b2b405  # v2.9.4
        with:
          header: pr-labels-error
          delete: true
